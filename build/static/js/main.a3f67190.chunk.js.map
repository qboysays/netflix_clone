{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Netflix_Logo_RGB.png","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","movieTrailer","require","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","randomTrailers","className","map","movie","onClick","console","log","name","then","url","Math","floor","random","length","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanticMovies","fetchDocumentaries","Banner","str","n","setMovie","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","href","logo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3f67190.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance;","import React, {useState,useEffect} from 'react'\r\nimport axios from './axios'\r\nimport './Row.css'\r\nimport YouTube from \"react-youtube\";\r\nconst movieTrailer = require( 'movie-trailer' ) \r\n\r\n\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n\r\n        async function fetchData(){\r\n            const request=await axios.get(fetchUrl)\r\n            setMovies(request.data.results)\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    },[fetchUrl]);\r\n\r\n    const opts={\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n            autoplay:1,\r\n        },\r\n    }\r\n\r\n    var randomTrailers=[\r\n        \"-0beFQnB5lY\",\r\n        \"rq9MHCwiSCI\",\r\n        \"wjJq4Hy8FxM\",\r\n        \"8ctRjR_DWAg\",\r\n        \"sPoTMwOftuA\",\r\n        \"xCwwxNbtK6Y\",\r\n        \"QsacpJwXCO8\"\r\n    ]\r\n\r\n    const handleClick=(movie)=>{\r\n        console.log(movie);\r\n        if (trailerUrl) {\r\n            setTrailerUrl('');\r\n                       \r\n        }else{\r\n            movieTrailer(movie?.name||\"\")\r\n            .then((url) =>{\r\n                url=url?url:setTrailerUrl( randomTrailers[Math.floor(Math.random()*randomTrailers.length-1)]);\r\n                const urlParams=new URLSearchParams( new URL(url).search);\r\n                setTrailerUrl( urlParams.get('v'));\r\n                \r\n\r\n            })\r\n            .catch((error)=>console.log(error));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row_posters\">\r\n\r\n                \r\n                {movies.map(movie=>(<img \r\n                key={movie.id}\r\n                onClick={()=>handleClick(movie)}\r\n                className={`row_poster  ${isLargeRow && \"row_posterLarge\"}`}\r\n                src={`${base_url}${isLargeRow?movie.poster_path:movie.backdrop_path}`} \r\n                alt={movie.name}\r\n                />))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} /> }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY='84b522dbb928f40389956dfe8780a81c';\r\n\r\nconst requests={\r\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanticMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React ,{useState,useEffect} from 'react'\r\nimport axios from './axios';\r\nimport requests from './requests'\r\nimport './Banner.css'\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request=await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length-1)]);\r\n            return request;\r\n        }fetchData();\r\n    }, [])\r\n\r\nfunction truncate(str,n){\r\n    return str?.length>n?str.substr(0,n-1)+\"...\":str;\r\n}\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n            style={\r\n                {\r\n                    backgroundSize:\"cover\",\r\n                    backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n                    backgroundPosition:\"center center\",\r\n                }\r\n            }\r\n        >\r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">\r\n                    {movie?.title||movie?.name||movie?.original_name}\r\n\r\n                </h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n\r\n\r\n                </div>\r\n                    <h1 className=\"banner_description\">{movie?.overview}\r\n                    {truncate(movie?.overview,150)}\r\n                    </h1>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"banner_fadeBottom\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","export default __webpack_public_path__ + \"static/media/Netflix_Logo_RGB.f4070143.png\";","import React,{useEffect,useState} from 'react'\r\nimport logo from './Netflix_Logo_RGB.png'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if (window.scrollY>100) {\r\n                handleShow(true);\r\n                \r\n            } else { \r\n                handleShow(false);\r\n                \r\n            }\r\n        });\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n\r\n       \r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <a href=\"https://www.linkedin.com/in/qalandar-sayed/\">\r\n            <img \r\n            className=\"nav_logo\"\r\n            src={logo}\r\n            alt=\"Netflix_logo\"\r\n            />\r\n            <img \r\n            className=\"nav_avatar\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n            alt=\"Netflix_avatar\"\r\n            />\r\n            </a>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests'\nimport Banner from './Banner'\nimport Nav from './Nav'\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanticMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}